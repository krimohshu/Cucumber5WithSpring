pipeline {
    agent {
        label 'maven||linux||automation'
    }

     parameters {
            string(defaultValue: "@smoke", description: 'Enter Cucumber tags along with @.', name: 'CucumberTags')
            string(defaultValue: "master", description: 'Enter a Github branch', name: 'Branch')
            choice(choices: ['qa','e2e', 'e2elatest','int','dev'], description: 'Select a target environment', name: 'Environment')
     }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }

    stages {
        stage("Echo all params before test??") {
            steps {
                echo "${params.CucumberTags}"
                echo "flag: ${params.Branch}"
                echo "flag: ${params.Environment}"
            }
        }
        stage('Git Checkout') {
            steps {
                script {
                   currentBuild.result = "SUCCESS"
                }
                checkout([
                    $class: 'GitSCM',

                    branches: [[name: "${params.Branch}"]],

                    userRemoteConfigs: [[credentialsId: 'krimohshu_2fa',
                    url: 'https://github.com/krimohshu/Cucumber5WithSpring.git ']]
                ])
                sh ('git config --global user.email "krishan.shyam@gmail.com"')
                sh ('git config --global user.name "Krishan Shukla"')
                sh ('git config --global push.default simple')
            }
        }

        stage('Execute Scenario Tests') {
                    steps {
                        catchError {
                                            sh ("mvn clean -Dspring.profiles.active=${params.Environment} test -Dcucumber.options='--tags ${params.CucumberTags}'" )
                                        }
                                        sh ('mvn cluecumber-report:reporting')
                                        echo currentBuild.result
                    }
                }

                    stage('Publish Jenkinsfile and Archive Results') {
                            steps {
                                  junit '**/target/surefire-reports/junitreports/TEST-*.xml'
                                  archiveArtifacts 'target/generated-report/**/*.*'
                                  archiveArtifacts artifacts: 'target/*.csv', allowEmptyArchive: true
                            }
                        }

                 stage('Publish Jenkinsfile') {
                            steps {
                                archive 'Jenkinsfile'
                            }
                        }
            }
        }
